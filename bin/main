#!/usr/bin/env ruby

player_one = { symbol: :X }
player_two = { symbol: :O }
turns = 4
# Computer asks for player's names

puts 'Enter first player name: '

player_one [:name] = gets.chomp.capitalize

puts "Welcome #{player_one[:name]}. Your symbol will be #{player_one[:symbol]}"

puts 'Enter second player name: '
player_two [:name] = gets.chomp.capitalize

puts "Welcome #{player_two[:name]}. Your symbol will be #{player_two[:symbol]}"

# Computer will display new state of game board (preferably visually)

board = [
  ['', '', ''],
  ['', '', ''],
  ['', '', '']
]

board.each { |array| p array }

# Computer prompts for each player to do their turn. In this example, we've only used one player for simplicity.
# At each turn, the computer will check state of board and determine if there is an error, if one player has won, or if it is a draw.

# rubocop: enable Layout/LineLength

def win_or_draw
  return rand(2)
end



turns.times do
  if turns % 2 == 0
    puts "#{player_one[:name]}, please choose a cell between 1 and 9 to make your move: "
  else
    puts "#{player_two[:name]}, please choose a cell between 1 and 9 to make your move: "
  end
  move = gets.chomp.to_i
  puts "You have chosen cell #{move}."
end

if win_or_draw == 1
  puts "win or draw"
else
  puts "There are no more empty cells. The game has ended in a draw"
end
